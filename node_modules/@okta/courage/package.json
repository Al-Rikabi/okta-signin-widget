{
  "_args": [
    [
      {
        "raw": "@okta/courage@https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
        "scope": "@okta",
        "escapedName": "@okta%2fcourage",
        "name": "@okta/courage",
        "rawSpec": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
        "spec": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
        "type": "remote"
      },
      "/Users/lboyette/okta/okta-signin-widget"
    ]
  ],
  "_from": "@okta/courage@1.3.0-beta.30",
  "_id": "@okta/courage@1.3.0-beta.30",
  "_inCache": true,
  "_location": "/@okta/courage",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@okta/courage@https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
    "scope": "@okta",
    "escapedName": "@okta%2fcourage",
    "name": "@okta/courage",
    "rawSpec": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
    "spec": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
  "_shasum": "5ddbe18cc94479b5d45bd95e95ffbeeb22ec1c42",
  "_shrinkwrap": null,
  "_spec": "@okta/courage@https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta/@okta/courage/-/@okta/courage-1.3.0-beta.30.tgz",
  "_where": "/Users/lboyette/okta/okta-signin-widget",
  "bugs": {
    "url": "https://github.com/okta/courage/issues"
  },
  "dependencies": {},
  "description": "Shared Okta UI components",
  "devDependencies": {
    "@okta/ci-pkginfo": "^1.1.0",
    "@okta/ci-update-package": "^1.1.0",
    "@okta/eslint-plugin-okta": "0.3.3",
    "@okta/grunt-scss-lint-checkstyle": "^1.1.0",
    "ace-builds": "1.2.2",
    "app-root-path": "1.0.0",
    "commander": "2.9.0",
    "connect": "3.4.0",
    "express": "4.13.4",
    "express-handlebars": "3.0.0",
    "git-rev-sync": "1.4.0",
    "grunt": "0.4.5",
    "grunt-cli": "0.1.13",
    "grunt-contrib-connect": "0.11.2",
    "grunt-contrib-copy": "1.0.0",
    "grunt-contrib-jasmine": "0.9.2",
    "grunt-contrib-watch": "1.0.0",
    "grunt-eslint": "17.3.1",
    "grunt-jsduck": "1.0.1",
    "grunt-open": "0.2.3",
    "grunt-shell": "1.1.1",
    "grunt-template-jasmine-requirejs": "0.2.3",
    "lodash": "4.6.1",
    "moment": "2.12.0",
    "normalize-url": "1.4.1",
    "open": "0.0.5",
    "semver": "5.1.0",
    "winston": "2.2.0"
  },
  "files": [
    "src",
    "assets"
  ],
  "homepage": "https://github.com/okta/courage",
  "license": "Apache-2.0",
  "name": "@okta/courage",
  "okta": {
    "commitSha": "bdf90162aba42be331b193fe7d0d3d854a147c6d",
    "fullVersion": "1.3.0-beta.30-20160627212231-bdf9016",
    "testedSha": "ea33cddca9b7537407d616dff5daaa1091843428"
  },
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://artifacts.aue1d.saasure.com/artifactory/api/npm/npm-okta"
  },
  "readme": "COURAGE\n=======\n<img align=\"right\" src=\"docs/img/ico_courage_64.png?raw=true\" />\n* [Getting started](#getting-started)\n* [Development workflow](#development-workflow)\n  * [Developing a feature in both okta-core and courage](#developing-a-feature-in-both-okta-core-and-courage)\n* [Publishing and consuming your changes](#publishing-and-consuming-your-changes)\n  * [Publish your new courage version](#publish-your-new-courage-version)\n  * [Install that new version in the project you're working on](#install-that-new-version-in-the-project-youre-working-on)\n* [Courage Playground](#courage-playground)\n* [Useful commands](#useful-commands)\n\n<a id=\"getting-started\"></a>\n# Getting started\n\nSetting up courage is easy:\n\n1. Navigate to your **$OKTA_HOME** directory\n    ```bash\n    [~]$ cd $OKTA_HOME\n    ```\n\n2. Clone this repo\n    ```bash\n    [okta]$ git clone git@github.com:okta/courage.git\n    ```\n\n3. Run an [npm install](https://docs.npmjs.com/cli/install)\n    ```bash\n    [okta/courage]$ npm install\n    ```\n\n<a id=\"development-workflow\"></a>\n# Development workflow\n\n**Note:** The [UICore team](https://oktawiki.atlassian.net/wiki/display/eng/UI+Core) is working on a more generic solution to this that will span across modules.\n\n<a id=\"developing-a-feature-in-both-okta-core-and-courage\"></a>\n### Developing a feature in both okta-core and courage\n\nIf you're working with the [admin](https://github.com/okta/okta-core/tree/master/clients/admin) or [enduser](https://github.com/okta/okta-core/tree/master/clients/enduser) okta-core projects, use the `grunt link` command:\n```bash\n# Links your current courage changes to okta-core/clients/admin\n[okta/courage]$ grunt link --admin\n\n# Links your current courage changes to okta-core/clients/enduser\n[okta/courage]$ grunt link --enduser\n\n# Links to both enduser and admin\n[okta/courage]$ grunt link\n```\n\n**Note:** If you're getting a permissions error when running this command:\n\nFirst, make sure that your npm path is NOT '/usr' by running the following command:\n```bash\nnpm config get prefix\n```\nIf your npm config prefix is '/usr', go to \"Option 2\" in [getting started docs](https://docs.npmjs.com/getting-started/fixing-npm-permissions)\n\nIf/When the path is correctly set, run the following command:\n```bash\n$ sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\n```\n\nMore information in NPM's [getting started docs](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\n\n\nThe `grunt link` command does a couple things:\n\n1. Runs an [npm link](https://docs.npmjs.com/cli/link) for the given project, which effectively symlinks the @okta/courage module to the checked out courage repo.\n\n  > For example, running `grunt link --admin` creates a symlink from *admin/node_modules/@okta/courage* to the *okta/courage* directory.\n\n2. [Watches](https://github.com/gruntjs/grunt-contrib-watch) for any changes to courage - both [sass](https://github.com/okta/courage/tree/master/assets/sass) and [js](https://github.com/okta/courage/tree/master/src). Changes trigger the **copy:courage** grunt targets for the given project.\n\n  > In the previous **admin** example, this watch ensures that any change to a file in the local courage directory gets copied to *okta-core/clients/admin/target*.\n\n3. Cleans up the links when the watch exits (**ctrl+c**). This includes both an `npm unlink` (deletes the symlink) and an `npm install` (retrieves the original @okta/courage module that's specified in the target package.json file).\n\nThis means that when running this command, **any change to courage gets deployed to the target/ folders in okta-core**.\n\nIn *okta-core*, you can use whichever flows you're normally used to. Note that there are no longer any \"deploy.modified.shared\" commands - they are no longer necessary.\n\n#### Examples\n\n##### Scenario 1: ant deploy.modified.ui targets\n- Run `[okta/courage]$ grunt watch --admin`\n- Make a change to courage\n- Wait for watch to copy files over (usually a second or so)\n- Run `[okta/okta-core]$ ant deploy.modified.ui.admin`\n\n##### Scenario 2: ant watch.ui\n- Run `[okta/courage]$ grunt watch --admin`\n- Run `[okta/okta-core]$ ant watch.ui`\n- Make a change to courage\n- Wait for courage watch to copy files over to the admin target dir\n- Wait for okta-core watch to copy to **$TOMCAT_HOME**\n\n<a id=\"publishing-and-consuming-your-changes\"></a>\n# Publishing and consuming your changes\n\nYou're done developing the courage component of your feature - now what? There are two main phases to getting your commits in:\n\n<a id=\"publish-your-new-courage-version\"></a>\n### 1. Publish your new courage version\n\n1. Push your topic courage branch to github\n2. Create a PR, and get it signed off\n3. Go to the [courage bacon dashboard](http://bacon.trex.saasure.com/#!/commits/courage)\n4. When everything has passed, and you've gotten a :rocket:, click the **merge** button\n5. Once the **master** commit has merged and passed bacon, run the following command in your topic branch to find the published version:\n\n    ```bash\n    # Finds the published beta prerelease version\n    [okta/courage]$ grunt get-published-version\n    ```\n\n<a id=\"install-that-new-version-in-the-project-youre-working-on\"></a>\n### 2. Install that new version in the project you're working on\n\n1. **Important** Make sure that `grunt link` is no longer running. When you exit the link command, the symlinks are deleted and an npm install re-installs the original @okta/courage version. You can verify that @okta/courage is no longer a symlink by running `ls -ld`:\n\n  ```bash\n  # Verify that this yields a directory, i.e. drwxr-xr-x, not lrwxr-xr-x\n  [clients/admin]$ ls -ld node_modules/\\@okta/courage\n  ```\n\n2. Install the package with your new version number\n\n  - If you're updating *okta-core*, update *clients/enduser* and *clients/admin* using the [install-with-shrinkwrap](https://github.com/okta/npm/tree/master/install-with-shrinkwrap#install-with-shrinkwrap) module:\n\n      ```bash\n      # If your version number is 1.1.0-beta.20:\n      [okta-core/clients/enduser]$ npm run installsw @okta/courage@1.1.0-beta.20\n      [okta-core/clients/admin]$ npm run installsw @okta/courage@1.1.0-beta.20\n      ```\n\n  - If you're updating another repo that does not have install-with-shrinkwrap installed, use `npm install`:\n\n      ```bash\n      [your-module]$ npm install -E @okta/courage@1.1.0-beta.20 --save\n      ```\n\n3. You're done! Well, almost. You'll need to commit this okta-core change.\n\n<a id=\"courage-playground\"></a>\n# Playground\n\nUse the playground to learn about and try the courage framework, and to iterate on local courage development.\n\n```bash\n# Starts the playground server on port 3000 and opens the browser\n[okta/courage]$ grunt play\n\n# Specify a different port with the --port option\n[okta/courage]$ grunt play --port=1337\n```\n\n<a id=\"useful-commands\"></a>\n# Useful commands\n\nCommand        | Description\n-------------- | --------------\n**grunt lint** | Runs *scss-lint*, *jshint*, and *eslint*\n**grunt test** | Runs the jasmine unit tests in the cli. Use **--br** to run in the browser\n**grunt link** | Links the current courage module to *enduser* or *admin*. Use **--enduser** or **--admin** for more specificity\n**grunt play** or **npm start** | Start the playground server to run on port 3000 by default. Load a url in browser with the specified port to use the playground, ex. localhost:3000.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/okta/courage.git"
  },
  "scripts": {
    "ci-pkginfo:dataload": "ci-pkginfo -t dataload",
    "ci-update-package": "ci-update-package",
    "lint": "grunt lint",
    "lint:report": "grunt lint --checkstyle",
    "start": "grunt play",
    "test": "grunt test",
    "test:report": "(grunt test --display full) || true"
  },
  "version": "1.3.0-beta.30"
}
